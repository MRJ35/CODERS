//package Coders;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.plaf.synth.SynthConstants;
import org.apache.commons.lang3.StringEscapeUtils;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Namit
 */
public class Compiler extends javax.swing.JFrame {
    //String username = "";
    /**
     * Creates new form Compiler
     */
    public Compiler() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        rSyntaxTextArea1 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Online Compiler");
        setMinimumSize(new java.awt.Dimension(900, 725));
        setResizable(false);

        jPanel1.setLayout(null);
        jPanel1.add(new RTextScrollPane(rSyntaxTextArea1));

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Product Sans", 2, 18)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 510, 318, 160);

        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Product Sans", 2, 18)); // NOI18N
        jTextArea3.setEditable(false);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(370, 510, 320, 160);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Memory");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 670, 100, 34);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CPU Time");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(370, 680, 112, 34);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Product Sans", 2, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(150, 680, 200, 30);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Product Sans", 2, 18)); // NOI18N
        jPanel1.add(jTextField2);
        jTextField2.setBounds(500, 680, 190, 31);

        jList1.setFont(new java.awt.Font("Product Sans", 2, 24)); // NOI18N
        jList1.setForeground(new java.awt.Color(51, 204, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Java", "C++14", "Python2", "Python3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jList1);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(740, 110, 127, 329);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Language");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(750, 60, 103, 34);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Code");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(320, 10, 82, 37);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Custom Input");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(130, 480, 114, 26);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Output");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(500, 480, 58, 26);

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 3, 28)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setText("Execute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(730, 580, 138, 56);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images OOP Project/practiceHomeIC.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel8MouseExited(evt);
            }
        });
        jPanel1.add(jLabel8);
        jLabel8.setBounds(850, 0, 50, 50);

        jLabel7.setFont(new java.awt.Font("Product Sans", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setVisible(false);
        jLabel7.setText("Homepage");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(770, 16, 70, 20);

        rSyntaxTextArea1.setColumns(20);
        rSyntaxTextArea1.setRows(5);
        rSyntaxTextArea1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jScrollPane5.setViewportView(rSyntaxTextArea1);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(30, 70, 660, 390);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images OOP Project/prepareBack.png"))); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(-120, 0, 1040, 920);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if ("C++14".equals(jList1.getSelectedValue())) {
            
            exxecute run = new exxecute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "cpp14", "1", StringEscapeUtils.escapeJava(jTextArea2.getText()));
            String check = run.executeCode();
            int x = check.indexOf("output");
            int y = check.indexOf("statusCode");
            int a = check.indexOf("memory");
            int b = check.indexOf("cpuTime");

            String mainOutput = check.substring(x + 9, y - 3);
            String mem = check.substring(a + 9, b - 3);
            String tym = check.substring(b + 10, check.length() - 2);

            System.out.println(mainOutput);
            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
            jTextField1.setText(mem + " b");
            jTextField2.setText(tym);
        } else if ("Java".equals(jList1.getSelectedValue())) {
           
            exxecute run = new exxecute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "java", "0", StringEscapeUtils.escapeJava(jTextArea2.getText()));
            String check = run.executeCode();
            int x = check.indexOf("output");
            int y = check.indexOf("statusCode");
            int a = check.indexOf("memory");
            int b = check.indexOf("cpuTime");

            String mainOutput = check.substring(x + 9, y - 3);
            String mem = check.substring(a + 9, b - 3);
            String tym = check.substring(b + 10, check.length() - 2);

            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
            jTextField1.setText(mem + " b");
            jTextField2.setText(tym);
        } else if ("Python2".equals(jList1.getSelectedValue())) {
           
            exxecute run = new exxecute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "python2", "1", StringEscapeUtils.escapeJava(jTextArea2.getText()));
            String check = run.executeCode();
            int x = check.indexOf("output");
            int y = check.indexOf("statusCode");
            int a = check.indexOf("memory");
            int b = check.indexOf("cpuTime");

            String mainOutput = check.substring(x + 9, y - 3);
            String mem = check.substring(a + 9, b - 3);
            String tym = check.substring(b + 10, check.length() - 2);

            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
            jTextField1.setText(mem + " b");
            jTextField2.setText(tym);
        } else if ("Python3".equals(jList1.getSelectedValue())) {
            
            exxecute run = new exxecute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "python3", "2", StringEscapeUtils.escapeJava(jTextArea2.getText()));
            String check = run.executeCode();
            int x = check.indexOf("output");
            int y = check.indexOf("statusCode");
            int a = check.indexOf("memory");
            int b = check.indexOf("cpuTime");

            String mainOutput = check.substring(x + 9, y - 3);
            String mem = check.substring(a + 9, b - 3);
            String tym = check.substring(b + 10, check.length() - 2);

            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
            jTextField1.setText(mem + " b");
            jTextField2.setText(tym);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if ("Java".equals(jList1.getSelectedValue())) {
             rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText("import java.util.*;\n\npublic class solution{\n\tpublic static void main(String args[]){\n\t}\n}");
        } else if ("C++14".equals(jList1.getSelectedValue())) {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_CPLUSPLUS);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText("#include <bits/stdc++.h>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint main(){\n\treturn 0;\n}");
        } else if ("Pyhton2".equals(jList1.getSelectedValue())) {
             rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText(null);
        } else {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText(null);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        // TODO add your handling code here:
        jLabel7.setVisible(true);
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseExited
        // TODO add your handling code here:
        jLabel7.setVisible(false);
    }//GEN-LAST:event_jLabel8MouseExited

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        Homepage home = new Homepage();
        this.setVisible(false);
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea rSyntaxTextArea1;
    // End of variables declaration//GEN-END:variables
}

class exxecute {

    //private String clientSecret;
    //private String clientId;
    private String script;
    private String language;
    private String versionIndex;
    private String stdin;

    public exxecute(String script, String language, String versionIndex, String stdin) {
        //this.clientSecret = clientSecret;
        //this.clientId = clientId;
        this.script = script;
        this.language = language;
        this.versionIndex = versionIndex;
        this.stdin = stdin;
    }

    public String executeCode() {
        String clientSecret = "cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8"; //Replace with your client Secret
        String clientId = "df592e57cd9bae0730f3ee3cd41398ca"; //Replace with your client ID
        try {
            URL url = new URL("https://api.jdoodle.com/execute");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setDoOutput(true);
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");

            String code = "print \'123\'";
            String input = "{\"clientId\": \"" + clientId + "\",\"clientSecret\":\"" + clientSecret + "\",\"script\":\"" + script
                    + "\",\"language\":\"" + language + "\",\"versionIndex\":\"" + versionIndex + "\", \"stdin\":\" " + stdin + "\"} ";
//            String input = "{\\r\\n    \\\"clientId\\\": \\\"df592e57cd9bae0730f3ee3cd41398ca\\\",\\r\\n    \\\"clientSecret\\\": \\\"cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8\\\",\\r\\n    \\\"script\\\": \\\"print \\\\\\\"123\\\\\\\"\\\",\\r\\n    \\\"language\\\": \\\"python2\\\",\\r\\n    \\\"versionIndex\\\": \\\"0\\\"\\r\\n}";
//            String input = "{\"clientId\": \"df592e57cd9bae0730f3ee3cd41398ca\",\"clientSecret\": \"cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8\",\"script\": "+  code +",\"language\": \"python2\",\"versionIndex\": \"0\"}";

            //System.out.println(input);
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(input.getBytes());
            outputStream.flush();

            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                throw new RuntimeException("Please check your inputs : HTTP error code : " + connection.getResponseCode());
            }

            BufferedReader bufferedReader;
            bufferedReader = new BufferedReader(new InputStreamReader(
                    (connection.getInputStream())));

            String output = null;
            String mainOutput = new String();
            //System.out.println("Output from JDoodle .... \n");
            while ((output = bufferedReader.readLine()) != null) {
                mainOutput += output;
            }
            // System.out.println(mainOutput);

            connection.disconnect();

            return mainOutput;

        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        // return mainOutput;
        return null;
    }
}
