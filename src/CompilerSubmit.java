/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package Coders;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import org.apache.commons.lang3.StringEscapeUtils;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;

/**
 *
 * @author Namit
 */
public class CompilerSubmit extends javax.swing.JFrame {
//    String username = "";
    /**
     * Creates new form CompilerSubmit
     */
    int count = 0, code = 0;
    String entry = null, usname = null;
    Long sumM = 0L;
    double sumT = 0;
    ArrayList<Integer> in = new ArrayList<>();
    int totalSum = 0;

    //ArrayList<String> enter = new ArrayList<>();
    public CompilerSubmit() {
        initComponents();
//        username = userName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        rTextScrollPane1 = new org.fife.ui.rtextarea.RTextScrollPane();
        rSyntaxTextArea1 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(920, 775));
        setResizable(false);

        jPanel1.setLayout(null);

        jList1.setFont(new java.awt.Font("Product Sans", 2, 24)); // NOI18N
        jList1.setForeground(new java.awt.Color(51, 204, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Java", "C++14", "Python2", "Python3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jList1);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(700, 90, 140, 210);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Language");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(720, 50, 103, 34);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Code");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(310, 30, 82, 37);

        jButton2.setBackground(new java.awt.Color(204, 255, 255));
        jButton2.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 153));
        jButton2.setText("Submit");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(390, 630, 220, 50);

        jList2.setFont(new java.awt.Font("Product Sans", 2, 24)); // NOI18N
        jList2.setForeground(new java.awt.Color(51, 204, 255));
        jScrollPane6.setViewportView(jList2);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(700, 360, 140, 220);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Question Code");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(680, 320, 190, 34);

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 2, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 255, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setVisible(false);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(70, 630, 280, 50);

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setText("Choose File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(640, 630, 210, 50);

        rSyntaxTextArea1.setColumns(20);
        rSyntaxTextArea1.setRows(5);
        rSyntaxTextArea1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        rTextScrollPane1.setViewportView(rSyntaxTextArea1);

        jPanel1.add(rTextScrollPane1);
        rTextScrollPane1.setBounds(60, 90, 590, 490);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images OOP Project/backCompilerSubmit.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 10, 40, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images OOP Project/color3.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 910, 740);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
        );

        Connection conne = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conne = DriverManager.getConnection("jdbc:mysql://remotemysql.com:3306/XIqlNMyym7", "XIqlNMyym7", "DCFdSrlJgp");
            //id1101599_db2
            Statement stat2 = conne.createStatement();
            String iString = "SELECT COUNT(*) FROM questions";
            System.out.println(iString);
            ResultSet rs2 = stat2.executeQuery(iString);
            while(rs2.next())
            {
                count = rs2.getInt("COUNT(*)");
            }
            String adding = "SELECT Question_Code FROM questions";
            ResultSet rs3 = stat2.executeQuery(adding);
            DefaultListModel dlm = new DefaultListModel();
            while(rs3.next())
            {
                code = rs3.getInt("Question_Code");
                entry = String.valueOf(code);
                dlm.addElement(entry);
            }
            jList2.setModel(dlm);
            stat2.close();
            conne.close();
        } catch (Exception e) {
            System.out.println("Exception caught --> " + e);
        }

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if ("Java".equals(jList1.getSelectedValue())) {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText("import java.util.*;\n\npublic class solution{\n\tpublic static void main(String args[]){\n\t}\n}");
        } else if ("C++14".equals(jList1.getSelectedValue())) {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_CPLUSPLUS);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText("#include <bits/stdc++.h>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint main(){\n\treturn 0;\n}");
        } else if ("Pyhton2".equals(jList1.getSelectedValue())) {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText(null);
        } else {
            rSyntaxTextArea1.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
            rSyntaxTextArea1.setCodeFoldingEnabled(true);
            rSyntaxTextArea1.setText(null);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //jLabel2.setVisible(true);
        // jButton2.setVisible(false);
        submitcheck();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        // jButton2.setVisible(false);

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String s1 = "",s2 = "";
        JFileChooser j = new JFileChooser();
        int i = j.showOpenDialog(this);
        if(i==JFileChooser.APPROVE_OPTION){
            File fi = j.getSelectedFile();
            String path = fi.getAbsolutePath();
            try{
                BufferedReader br = new BufferedReader(new FileReader(path));

                while((s1 = br.readLine())!=null){
                    s2 +=s1+"\n";
                }
                br.close();
            }
            catch(Exception e){
                       e.printStackTrace();
        }
            
        }
        rSyntaxTextArea1.setText(s2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        QuestionPage page = new QuestionPage();
        this.setVisible(false);
        this.dispose();
        page.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompilerSubmit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompilerSubmit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompilerSubmit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompilerSubmit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompilerSubmit().setVisible(true);
            }
        });
    }

    public void submitcheck() {
        int acceptCount = 0;
        JDBC_Connection co = new JDBC_Connection();
        String[] t = new String[5];
        String[] o = new String[5];
        int selVal = Integer.parseInt(jList2.getSelectedValue());
        if ("C++14".equals(jList1.getSelectedValue())) {

            Connection conne = null;

            try {
                Class.forName("com.mysql.jdbc.Driver");
                conne = DriverManager.getConnection(co.connect(), co.getUsername(), co.getUsername());
                //id1101599_db2
                Statement stat2 = conne.createStatement();
                String iString = "SELECT Testcase1,Testcase2,Testcase3,Testcase4,Testcase5 FROM testcase WHERE Question_Code = " + selVal;
                System.out.println(iString);
                ResultSet rs2 = stat2.executeQuery(iString);
                while (rs2.next()) {
                    t[0] = rs2.getString("Testcase1");
                    t[1] = rs2.getString("Testcase2");
                    t[2] = rs2.getString("Testcase3");
                    t[3] = rs2.getString("Testcase4");
                    t[4] = rs2.getString("Testcase5");
                }
                String oString = "SELECT Output1,Output2,Output3,Output4,Output5 FROM outputs WHERE Question_Code = " + selVal;
                System.out.println(oString);
                ResultSet rs3 = stat2.executeQuery(oString);
                while (rs3.next()) {
                    o[0] = rs3.getString("Output1");
                    o[1] = rs3.getString("Output2");
                    o[2] = rs3.getString("Output3");
                    o[3] = rs3.getString("Output4");
                    o[4] = rs3.getString("Output5");
                }

                //con.commit();
                rs2.close();
                rs3.close();
                stat2.close();
                //stat3.close();
                conne.close();
            } catch (Exception e) {
                System.out.println("Exception caught --> " + e);
            }
            for (int i = 0; i < 5; i++) {
                execute run = new execute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "cpp14", "1", StringEscapeUtils.escapeJava(t[i])
                );//StringEscapeUtils.escapeJava(jTextArea2.getText()));
                String check = run.executeCode();
                int x = check.indexOf("output");
                int y = check.indexOf("statusCode");
                int a = check.indexOf("memory");
                int b = check.indexOf("cpuTime");

                String mainOutput = check.substring(x + 9, y - 3);
                if (mainOutput.length() > 1) {
                    if (mainOutput.charAt(mainOutput.length() - 2) == '\\') {
                        mainOutput = mainOutput.substring(0, mainOutput.length() - 2);
                    }
                }
                //mainOutput = StringEscapeUtils.unescapeJava(mainOutput);
                //System.out.println("My Output \n" +mainOutput);
                String mem = check.substring(a + 9, b - 3);
                String tym = check.substring(b + 10, check.length() - 2);
                //System.out.println("Reg Output\n"+StringEscapeUtils.escapeJava(o[i].replaceAll("\\r", "")));
                o[i] = o[i].replaceAll("\\r", "");
                if (mainOutput.equals(StringEscapeUtils.escapeJava(o[i]))) {
                    acceptCount++;
                }
                System.out.println(mem + " " + tym);
                sumM += Long.parseLong(mem);
                sumT += Double.parseDouble(tym);
//            System.out.println(mainOutput);
//            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
//            jTextField1.setText(mem + " b");
//            jTextField2.setText(tym);
            }
        } else if ("Java".equals(jList1.getSelectedValue())) {
            Connection conne = null;

            try {
                Class.forName("com.mysql.jdbc.Driver");
                conne = DriverManager.getConnection(co.connect(), co.getUsername(), co.getPassword());
                //id1101599_db2
                Statement stat2 = conne.createStatement();
                String iString = "SELECT Testcase1,Testcase2,Testcase3,Testcase4,Testcase5 FROM testcase WHERE Question_Code = " + selVal;
                System.out.println(iString);
                ResultSet rs2 = stat2.executeQuery(iString);
                while (rs2.next()) {
                    t[0] = rs2.getString("Testcase1");
                    t[1] = rs2.getString("Testcase2");
                    t[2] = rs2.getString("Testcase3");
                    t[3] = rs2.getString("Testcase4");
                    t[4] = rs2.getString("Testcase5");
                }
                String oString = "SELECT Output1,Output2,Output3,Output4,Output5 FROM outputs WHERE Question_Code = " + selVal;
                System.out.println(oString);
                ResultSet rs3 = stat2.executeQuery(oString);
                while (rs3.next()) {
                    o[0] = rs3.getString("Output1");
                    o[1] = rs3.getString("Output2");
                    o[2] = rs3.getString("Output3");
                    o[3] = rs3.getString("Output4");
                    o[4] = rs3.getString("Output5");
                }
                //System.out.println(o[1]);
                //con.commit();
                stat2.close();
                //stat3.close();
                conne.close();
            } catch (Exception e) {
                System.out.println("Exception caught --> " + e);
            }
            for (int i = 0; i < 5; i++) {
                execute run = new execute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "java", "0", StringEscapeUtils.escapeJava(t[i]));
                String check = run.executeCode();
                int x = check.indexOf("output");
                int y = check.indexOf("statusCode");
                int a = check.indexOf("memory");
                int b = check.indexOf("cpuTime");

                String mainOutput = check.substring(x + 9, y - 3);
                //System.out.println(mainOutput);
                if (mainOutput.charAt(mainOutput.length() - 2) == '\\') {
                    mainOutput = mainOutput.substring(0, mainOutput.length() - 2);
                }
                //System.out.println(check2);
                //mainOutput = StringEscapeUtils.unescapeJava(mainOutput);
                // System.out.println("My Output\n"+mainOutput);
                String mem = check.substring(a + 9, b - 3);
                String tym = check.substring(b + 10, check.length() - 2);
                o[i] = o[i].replaceAll("\\r", "");
                //System.out.println("Req out\n"+o[i]);
                if (mainOutput.equals(StringEscapeUtils.escapeJava(o[i]))) {
                    acceptCount++;
                }
                sumM += Long.parseLong(mem);
                sumT += Double.parseDouble(tym);
//            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
//            jTextField1.setText(mem + " b");
//            jTextField2.setText(tym);
            }
        } else if ("Python2".equals(jList1.getSelectedValue())) {
            Connection conne = null;

            try {
                Class.forName("com.mysql.jdbc.Driver");
                conne = DriverManager.getConnection(co.connect(), co.getUsername(), co.getPassword());
                //id1101599_db2
                Statement stat2 = conne.createStatement();
                String iString = "SELECT Testcase1,Testcase2,Testcase3,Testcase4,Testcase5 FROM testcase WHERE Question_Code = " + selVal;
                System.out.println(iString);
                ResultSet rs2 = stat2.executeQuery(iString);
                while (rs2.next()) {
                    t[0] = rs2.getString("Testcase1");
                    t[1] = rs2.getString("Testcase2");
                    t[2] = rs2.getString("Testcase3");
                    t[3] = rs2.getString("Testcase4");
                    t[4] = rs2.getString("Testcase5");
                }
                String oString = "SELECT Output1,Output2,Output3,Output4,Output5 FROM outputs WHERE Question_Code = " + selVal;
                System.out.println(oString);
                ResultSet rs3 = stat2.executeQuery(oString);
                while (rs3.next()) {
                    o[0] = rs3.getString("Output1");
                    o[1] = rs3.getString("Output2");
                    o[2] = rs3.getString("Output3");
                    o[3] = rs3.getString("Output4");
                    o[4] = rs3.getString("Output5");
                }

                //con.commit();
                stat2.close();
                //stat3.close();
                conne.close();
            } catch (Exception e) {
                System.out.println("Exception caught --> " + e);
            }
            for (int i = 0; i < 5; i++) {
                execute run = new execute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "python2", "1", t[i]);
                String check = run.executeCode();
                int x = check.indexOf("output");
                int y = check.indexOf("statusCode");
                int a = check.indexOf("memory");
                int b = check.indexOf("cpuTime");

                String mainOutput = check.substring(x + 9, y - 3);
                if (mainOutput.charAt(mainOutput.length() - 2) == '\\') {
                    mainOutput = mainOutput.substring(0, mainOutput.length() - 2);
                }
                // mainOutput = StringEscapeUtils.unescapeJava(mainOutput);
                String mem = check.substring(a + 9, b - 3);
                String tym = check.substring(b + 10, check.length() - 2);

//            jTextArea3.setText(StringEscapeUtils.unescapeJava(mainOutput));
//            jTextField1.setText(mem + " b");
                o[i] = o[i].replaceAll("\\r", "");
                if (mainOutput.equals(StringEscapeUtils.escapeJava(o[i]))) {
                    acceptCount++;
                }
                sumM += Long.parseLong(mem);
                sumT += Double.parseDouble(tym);
//            
            }
        } else if ("Python3".equals(jList1.getSelectedValue())) {
            Connection conne = null;

            try {
                Class.forName("com.mysql.jdbc.Driver");
                conne = DriverManager.getConnection(co.connect(), co.getUsername(), co.getPassword());
                //id1101599_db2
                Statement stat2 = conne.createStatement();
                String iString = "SELECT Testcase1,Testcase2,Testcase3,Testcase4,Testcase5 FROM testcase WHERE Question_Code = " + selVal;
                System.out.println(iString);
                ResultSet rs2 = stat2.executeQuery(iString);
                while (rs2.next()) {
                    t[0] = rs2.getString("Testcase1");
                    t[1] = rs2.getString("Testcase2");
                    t[2] = rs2.getString("Testcase3");
                    t[3] = rs2.getString("Testcase4");
                    t[4] = rs2.getString("Testcase5");
                }
                String oString = "SELECT Output1,Output2,Output3,Output4,Output5 FROM outputs WHERE Question_Code = " + selVal;
                System.out.println(oString);
                ResultSet rs3 = stat2.executeQuery(oString);
                while (rs3.next()) {
                    o[0] = rs3.getString("Output1");
                    o[1] = rs3.getString("Output2");
                    o[2] = rs3.getString("Output3");
                    o[3] = rs3.getString("Output4");
                    o[4] = rs3.getString("Output5");
                }

                //con.commit();
                stat2.close();
                //stat3.close();
                conne.close();
            } catch (Exception e) {
                System.out.println("Exception caught --> " + e);
            }
            for (int i = 0; i < 5; i++) {
                execute run = new execute(StringEscapeUtils.escapeJava(rSyntaxTextArea1.getText()), "python3", "2", t[i]);
                String check = run.executeCode();
                int x = check.indexOf("output");
                int y = check.indexOf("statusCode");
                int a = check.indexOf("memory");
                int b = check.indexOf("cpuTime");

                String mainOutput = check.substring(x + 9, y - 3);
                if (mainOutput.charAt(mainOutput.length() - 2) == '\\') {
                    mainOutput = mainOutput.substring(0, mainOutput.length() - 2);
                }
                //mainOutput = StringEscapeUtils.unescapeJava(mainOutput);
                String mem = check.substring(a + 9, b - 3);
                String tym = check.substring(b + 10, check.length() - 2);
                o[i] = o[i].replaceAll("\\r", "");

                if (mainOutput.equals(StringEscapeUtils.escapeJava(o[i]))) {
                    acceptCount++;
                }
                sumM += Long.parseLong(mem);
                sumT += Double.parseDouble(tym);
            }
        }
        System.out.println(sumM);
        int sumt = (int) (sumT / 5.0);
        System.out.println(sumt);
        if (acceptCount == 5) {
            System.out.println("Accepted");
            jLabel8.setText("Accepted");
            jLabel8.setForeground(new java.awt.Color(0, 255, 0));
            jLabel8.setVisible(true);

        } else {

            System.out.println("Wrong Answer");
            jLabel8.setText("Wrong Answer");
            jLabel8.setForeground(new java.awt.Color(252, 5,28));
            jLabel8.setVisible(true);
        }
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(co.connect(), co.getUsername(), co.getPassword());
            Statement stat = con.createStatement();
            String obtain = "SELECT username FROM Login_Logout";
            ResultSet rs = stat.executeQuery(obtain);
            while (rs.next()) {
                usname = rs.getString("username");
            }

            String insertString = "INSERT INTO submissions VALUES ('" + Login.userrName + "','" + jList2.getSelectedValue() + "','" + jLabel8.getText() + "'," + sumM / 1024 + "," + sumt + ",\"" + jList1.getSelectedValue() + "\")";
            System.out.println(insertString);
            int i = stat.executeUpdate(insertString);

            System.out.println("Return value from executeUpdate " + i);
            if (i == 1) {
                System.out.println("Added Successfully");
            } else {
                System.out.println("Error in Adding");
            }

            int cc = 0;
            String scc = "SELECT DISTINCT Question_Code FROM submissions WHERE username = '" + Login.userrName + "' AND Status = \"Accepted\"";
            System.out.println(scc);
            ResultSet rr = stat.executeQuery(scc);
            while (rr.next()) {
                // int ii = rr.getInt("Question_Code");
                in.add(rr.getInt("Question_Code"));
            }
            for (int j = 0; j < in.size(); j++) {
                String x = "SELECT Question_score from questions WHERE Question_Code = "+in.get(j);
                ResultSet rss = stat.executeQuery(x);
                while(rss.next())
                {
                    totalSum += rss.getInt("Question_score");
                }
            }
            String updateS = "UPDATE score SET score = "+totalSum +" WHERE username = '"+ Login.userrName +"'";
            stat.executeUpdate(updateS);

            stat.close();
            con.close();
        } catch (Exception e) {
            System.out.println("Exception caught --> " + e);
        }

    }   //catch (SQLException ex) {
          //  Logger.getLogger(CompilerSubmit.class.getName()).log(Level.SEVERE, null, ex);
        //} catch (ClassNotFoundException ex) {
          //  Logger.getLogger(CompilerSubmit.class.getName()).log(Level.SEVERE, null, ex);
        //}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea rSyntaxTextArea1;
    private org.fife.ui.rtextarea.RTextScrollPane rTextScrollPane1;
    // End of variables declaration//GEN-END:variables
}

class execute {

    //private String clientSecret;
    //private String clientId;
    private String script;
    private String language;
    private String versionIndex;
    private String stdin;

    public execute(String script, String language, String versionIndex, String stdin) {
        //this.clientSecret = clientSecret;
        //this.clientId = clientId;
        this.script = script;
        this.language = language;
        this.versionIndex = versionIndex;
        this.stdin = stdin;
    }

    public String executeCode() {
        String clientSecret = "cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8"; //Replace with your client Secret
        String clientId = "df592e57cd9bae0730f3ee3cd41398ca"; //Replace with your client ID
        try {
            URL url = new URL("https://api.jdoodle.com/execute");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setDoOutput(true);
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");

            String code = "print \'123\'";
            String input = "{\"clientId\": \"" + clientId + "\",\"clientSecret\":\"" + clientSecret + "\",\"script\":\"" + script
                    + "\",\"language\":\"" + language + "\",\"versionIndex\":\"" + versionIndex + "\", \"stdin\":\" " + stdin + "\"} ";
//            String input = "{\\r\\n    \\\"clientId\\\": \\\"df592e57cd9bae0730f3ee3cd41398ca\\\",\\r\\n    \\\"clientSecret\\\": \\\"cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8\\\",\\r\\n    \\\"script\\\": \\\"print \\\\\\\"123\\\\\\\"\\\",\\r\\n    \\\"language\\\": \\\"python2\\\",\\r\\n    \\\"versionIndex\\\": \\\"0\\\"\\r\\n}";
//            String input = "{\"clientId\": \"df592e57cd9bae0730f3ee3cd41398ca\",\"clientSecret\": \"cc6b5510cd0fc96a71024caefb232d19a795665893f90cbb1f12f1a6793b97d8\",\"script\": "+  code +",\"language\": \"python2\",\"versionIndex\": \"0\"}";

            // System.out.println(input);
            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(input.getBytes());
            outputStream.flush();

            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                throw new RuntimeException("Please check your inputs : HTTP error code : " + connection.getResponseCode());
            }

            BufferedReader bufferedReader;
            bufferedReader = new BufferedReader(new InputStreamReader(
                    (connection.getInputStream())));

            String output = null;
            String mainOutput = new String();
            //System.out.println("Output from JDoodle .... \n");
            while ((output = bufferedReader.readLine()) != null) {
                mainOutput += output;
            }
            // System.out.println(mainOutput);

            connection.disconnect();

            return mainOutput;

        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        // return mainOutput;
        return null;
    }
}
